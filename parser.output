State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt stmts
    3      | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | while
    7     | for
    8     | returnstmt

    9 $@1: %empty

   10 stmt: BREAK $@1 SEMICOLON

   11 $@2: %empty

   12 stmt: CONTINUE $@2 SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON

   16 expr: assignexpr
   17     | expr PLUS expr
   18     | expr MINUS expr
   19     | expr MULTIPLY expr
   20     | expr SLASH_F expr
   21     | expr PERCENT expr
   22     | expr LESS expr
   23     | expr B_EQUAL expr
   24     | expr EQUAL_TWO expr
   25     | expr GREATER expr
   26     | expr L_EQUAL expr
   27     | expr NOT_EQUAL expr
   28     | expr OR M expr
   29     | expr AND M expr
   30     | term

   31 M: %empty

   32 N: %empty

   33 term: LEFT_PARENTH expr RIGHT_PARENTH
   34     | MINUS expr
   35     | NOT expr
   36     | PLUS_TWO lvalue
   37     | lvalue PLUS_TWO
   38     | lvalue MINUS_TWO
   39     | MINUS_TWO lvalue
   40     | primary

   41 $@3: %empty

   42 assignexpr: lvalue $@3 EQUAL expr

   43 primary: lvalue
   44        | call
   45        | objectdef
   46        | LEFT_PARENTH funcdef RIGHT_PARENTH
   47        | const

   48 lvalue: ID
   49       | LOCAL ID
   50       | NAMESPACE_ ID
   51       | member

   52 member: lvalue DOT ID
   53       | lvalue LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET
   54       | call LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET

   55 call: call LEFT_PARENTH elist RIGHT_PARENTH
   56     | lvalue callsuffix
   57     | LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: LEFT_PARENTH elist RIGHT_PARENTH

   61 methodcall: DOT_TWO ID LEFT_PARENTH elist RIGHT_PARENTH

   62 elist: expr exprs
   63      | %empty

   64 exprs: COMMA expr exprs
   65      | %empty

   66 objectdef: LEFT_SQ_BRACKET elist RIGHT_SQ_BRACKET
   67          | LEFT_SQ_BRACKET indexed RIGHT_SQ_BRACKET

   68 indexed: indexedelem indexedelems

   69 indexedelems: COMMA indexedelem indexedelems
   70             | %empty

   71 indexedelem: LEFT_BRACKET expr COLON expr RIGHT_BRACKET

   72 $@4: %empty

   73 block: LEFT_BRACKET $@4 stmts RIGHT_BRACKET

   74 @5: %empty

   75 $@6: %empty

   76 $@7: %empty

   77 funcdef: FUNCTION ID @5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH $@7 block

   78 @8: %empty

   79 $@9: %empty

   80 $@10: %empty

   81 funcdef: FUNCTION @8 LEFT_PARENTH $@9 idlist RIGHT_PARENTH $@10 block

   82 const: NUM
   83      | STRING
   84      | NIL
   85      | TRUE
   86      | FALSE
   87      | FLOAT

   88 idlist: ID
   89       | idlist COMMA ID
   90       | %empty

   91 ifprefix: IF LEFT_PARENTH expr RIGHT_PARENTH

   92 elseprefix: ELSE

   93 ifstmt: ifprefix stmt
   94       | ifprefix stmt elseprefix stmt

   95 whilestart: WHILE

   96 whilecond: LEFT_PARENTH expr RIGHT_PARENTH

   97 while: whilestart whilecond stmt

   98 $@11: %empty

   99 $@12: %empty

  100 $@13: %empty

  101 forprefix: FOR $@11 LEFT_PARENTH elist SEMICOLON $@12 M expr SEMICOLON $@13

  102 for: forprefix N elist RIGHT_PARENTH N stmt N

  103 returnstmt: RETURN expr SEMICOLON
  104           | RETURN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 91
    ELSE (259) 92
    WHILE (260) 95
    FOR (261) 101
    FUNCTION (262) 77 81
    RETURN (263) 103 104
    BREAK <stmt> (264) 10
    CONTINUE <stmt> (265) 12
    AND (266) 29
    NOT (267) 35
    OR (268) 28
    LOCAL (269) 49
    TRUE (270) 85
    FALSE (271) 86
    NIL (272) 84
    EQUAL (273) 42
    PLUS (274) 17
    MINUS (275) 18 34
    MULTIPLY (276) 19
    SLASH_F (277) 20
    PERCENT (278) 21
    EQUAL_TWO (279) 24
    NOT_EQUAL (280) 27
    PLUS_TWO (281) 36 37
    MINUS_TWO (282) 38 39
    GREATER (283) 25
    LESS (284) 22
    B_EQUAL (285) 23
    L_EQUAL (286) 26
    NUM <int_val> (287) 82
    FLOAT <real_val> (288) 87
    STRING <string_Val> (289) 83
    LEFT_BRACKET (290) 71 73
    RIGHT_BRACKET (291) 71 73
    LEFT_SQ_BRACKET (292) 53 54 66 67
    RIGHT_SQ_BRACKET (293) 53 54 66 67
    LEFT_PARENTH (294) 33 46 55 57 60 61 77 81 91 96 101
    RIGHT_PARENTH (295) 33 46 55 57 60 61 77 81 91 96 102
    SEMICOLON (296) 4 10 12 15 101 103 104
    COMMA (297) 64 69 89
    COLON (298) 71
    NAMESPACE_ (299) 50
    DOT (300) 52
    DOT_TWO (301) 61
    ID <string_Val> (302) 48 49 50 52 61 77 88 89


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    stmts <stmt> (50)
        on left: 2 3
        on right: 1 2 73
    stmt <stmt> (51)
        on left: 4 5 6 7 8 10 12 13 14 15
        on right: 2 93 94 97 102
    $@1 (52)
        on left: 9
        on right: 10
    $@2 (53)
        on left: 11
        on right: 12
    expr <expr> (54)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 4 17 18 19 20 21 22 23 24 25 26 27 28 29 33 34 35 42 53 54 62 64 71 91 96 101 103
    M <int_val> (55)
        on left: 31
        on right: 28 29 101
    N <int_val> (56)
        on left: 32
        on right: 102
    term <expr> (57)
        on left: 33 34 35 36 37 38 39 40
        on right: 30
    assignexpr <expr> (58)
        on left: 42
        on right: 16
    $@3 (59)
        on left: 41
        on right: 42
    primary <expr> (60)
        on left: 43 44 45 46 47
        on right: 40
    lvalue <expr> (61)
        on left: 48 49 50 51
        on right: 36 37 38 39 42 43 52 53 56
    member <expr> (62)
        on left: 52 53 54
        on right: 51
    call <expr> (63)
        on left: 55 56 57
        on right: 44 54 55
    callsuffix <call_f> (64)
        on left: 58 59
        on right: 56
    normcall <call_f> (65)
        on left: 60
        on right: 58
    methodcall <call_f> (66)
        on left: 61
        on right: 59
    elist <expr> (67)
        on left: 62 63
        on right: 55 57 60 61 66 101 102
    exprs <expr> (68)
        on left: 64 65
        on right: 62 64
    objectdef <expr> (69)
        on left: 66 67
        on right: 45
    indexed <expr> (70)
        on left: 68
        on right: 67
    indexedelems <expr> (71)
        on left: 69 70
        on right: 68 69
    indexedelem <expr> (72)
        on left: 71
        on right: 68 69
    block (73)
        on left: 73
        on right: 13 77 81
    $@4 (74)
        on left: 72
        on right: 73
    funcdef <expr> (75)
        on left: 77 81
        on right: 14 46 57
    @5 (76)
        on left: 74
        on right: 77
    $@6 (77)
        on left: 75
        on right: 77
    $@7 (78)
        on left: 76
        on right: 77
    @8 (79)
        on left: 78
        on right: 81
    $@9 (80)
        on left: 79
        on right: 81
    $@10 (81)
        on left: 80
        on right: 81
    const <expr> (82)
        on left: 82 83 84 85 86 87
        on right: 47
    idlist <expr> (83)
        on left: 88 89 90
        on right: 77 81 89
    ifprefix <int_val> (84)
        on left: 91
        on right: 93 94
    elseprefix <int_val> (85)
        on left: 92
        on right: 94
    ifstmt (86)
        on left: 93 94
        on right: 5
    whilestart <int_val> (87)
        on left: 95
        on right: 97
    whilecond <int_val> (88)
        on left: 96
        on right: 97
    while (89)
        on left: 97
        on right: 6
    forprefix <for_p> (90)
        on left: 101
        on right: 102
    $@11 (91)
        on left: 98
        on right: 101
    $@12 (92)
        on left: 99
        on right: 101
    $@13 (93)
        on left: 100
        on right: 101
    for (94)
        on left: 102
        on right: 7
    returnstmt <stmt> (95)
        on left: 103 104
        on right: 8


State 0

    0 $accept: • program $end

    IF               shift, and go to state 1
    WHILE            shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    RETURN           shift, and go to state 5
    BREAK            shift, and go to state 6
    CONTINUE         shift, and go to state 7
    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_BRACKET     shift, and go to state 19
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    SEMICOLON        shift, and go to state 22
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    while       go to state 42
    forprefix   go to state 43
    for         go to state 44
    returnstmt  go to state 45


State 1

   91 ifprefix: IF • LEFT_PARENTH expr RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 46


State 2

   95 whilestart: WHILE •

    $default  reduce using rule 95 (whilestart)


State 3

  101 forprefix: FOR • $@11 LEFT_PARENTH elist SEMICOLON $@12 M expr SEMICOLON $@13

    $default  reduce using rule 98 ($@11)

    $@11  go to state 47


State 4

   77 funcdef: FUNCTION • ID @5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH $@7 block
   81        | FUNCTION • @8 LEFT_PARENTH $@9 idlist RIGHT_PARENTH $@10 block

    ID  shift, and go to state 48

    $default  reduce using rule 78 (@8)

    @8  go to state 49


State 5

  103 returnstmt: RETURN • expr SEMICOLON
  104           | RETURN • SEMICOLON

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    SEMICOLON        shift, and go to state 50
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 51
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 6

   10 stmt: BREAK • $@1 SEMICOLON

    $default  reduce using rule 9 ($@1)

    $@1  go to state 52


State 7

   12 stmt: CONTINUE • $@2 SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 53


State 8

   35 term: NOT • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 9

   49 lvalue: LOCAL • ID

    ID  shift, and go to state 55


State 10

   85 const: TRUE •

    $default  reduce using rule 85 (const)


State 11

   86 const: FALSE •

    $default  reduce using rule 86 (const)


State 12

   84 const: NIL •

    $default  reduce using rule 84 (const)


State 13

   34 term: MINUS • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 14

   36 term: PLUS_TWO • lvalue

    LOCAL         shift, and go to state 9
    LEFT_PARENTH  shift, and go to state 57
    NAMESPACE_    shift, and go to state 23
    ID            shift, and go to state 24

    lvalue  go to state 58
    member  go to state 33
    call    go to state 59


State 15

   39 term: MINUS_TWO • lvalue

    LOCAL         shift, and go to state 9
    LEFT_PARENTH  shift, and go to state 57
    NAMESPACE_    shift, and go to state 23
    ID            shift, and go to state 24

    lvalue  go to state 60
    member  go to state 33
    call    go to state 59


State 16

   82 const: NUM •

    $default  reduce using rule 82 (const)


State 17

   87 const: FLOAT •

    $default  reduce using rule 87 (const)


State 18

   83 const: STRING •

    $default  reduce using rule 83 (const)


State 19

   73 block: LEFT_BRACKET • $@4 stmts RIGHT_BRACKET

    $default  reduce using rule 72 ($@4)

    $@4  go to state 61


State 20

   66 objectdef: LEFT_SQ_BRACKET • elist RIGHT_SQ_BRACKET
   67          | LEFT_SQ_BRACKET • indexed RIGHT_SQ_BRACKET

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_BRACKET     shift, and go to state 62
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr         go to state 63
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 64
    objectdef    go to state 35
    indexed      go to state 65
    indexedelem  go to state 66
    const        go to state 38


State 21

   33 term: LEFT_PARENTH • expr RIGHT_PARENTH
   46 primary: LEFT_PARENTH • funcdef RIGHT_PARENTH
   57 call: LEFT_PARENTH • funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    FUNCTION         shift, and go to state 4
    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 68
    const       go to state 38


State 22

   15 stmt: SEMICOLON •

    $default  reduce using rule 15 (stmt)


State 23

   50 lvalue: NAMESPACE_ • ID

    ID  shift, and go to state 69


State 24

   48 lvalue: ID •

    $default  reduce using rule 48 (lvalue)


State 25

    0 $accept: program • $end

    $end  shift, and go to state 70


State 26

    1 program: stmts •

    $default  reduce using rule 1 (program)


State 27

    2 stmts: stmt • stmts

    IF               shift, and go to state 1
    WHILE            shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    RETURN           shift, and go to state 5
    BREAK            shift, and go to state 6
    CONTINUE         shift, and go to state 7
    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_BRACKET     shift, and go to state 19
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    SEMICOLON        shift, and go to state 22
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    stmts       go to state 71
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    while       go to state 42
    forprefix   go to state 43
    for         go to state 44
    returnstmt  go to state 45


State 28

    4 stmt: expr • SEMICOLON
   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84
    SEMICOLON  shift, and go to state 85


State 29

   30 expr: term •

    $default  reduce using rule 30 (expr)


State 30

   16 expr: assignexpr •

    $default  reduce using rule 16 (expr)


State 31

   40 term: primary •

    $default  reduce using rule 40 (term)


State 32

   37 term: lvalue • PLUS_TWO
   38     | lvalue • MINUS_TWO
   42 assignexpr: lvalue • $@3 EQUAL expr
   43 primary: lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET
   56 call: lvalue • callsuffix

    PLUS_TWO         shift, and go to state 86
    MINUS_TWO        shift, and go to state 87
    LEFT_SQ_BRACKET  shift, and go to state 88
    LEFT_PARENTH     shift, and go to state 89
    DOT              shift, and go to state 90
    DOT_TWO          shift, and go to state 91

    EQUAL     reduce using rule 41 ($@3)
    $default  reduce using rule 43 (primary)

    $@3         go to state 92
    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 33

   51 lvalue: member •

    $default  reduce using rule 51 (lvalue)


State 34

   44 primary: call •
   54 member: call • LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET
   55 call: call • LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_SQ_BRACKET  shift, and go to state 96
    LEFT_PARENTH     shift, and go to state 97

    $default  reduce using rule 44 (primary)


State 35

   45 primary: objectdef •

    $default  reduce using rule 45 (primary)


State 36

   13 stmt: block •

    $default  reduce using rule 13 (stmt)


State 37

   14 stmt: funcdef •

    $default  reduce using rule 14 (stmt)


State 38

   47 primary: const •

    $default  reduce using rule 47 (primary)


State 39

   93 ifstmt: ifprefix • stmt
   94       | ifprefix • stmt elseprefix stmt

    IF               shift, and go to state 1
    WHILE            shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    RETURN           shift, and go to state 5
    BREAK            shift, and go to state 6
    CONTINUE         shift, and go to state 7
    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_BRACKET     shift, and go to state 19
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    SEMICOLON        shift, and go to state 22
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    stmt        go to state 98
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    while       go to state 42
    forprefix   go to state 43
    for         go to state 44
    returnstmt  go to state 45


State 40

    5 stmt: ifstmt •

    $default  reduce using rule 5 (stmt)


State 41

   97 while: whilestart • whilecond stmt

    LEFT_PARENTH  shift, and go to state 99

    whilecond  go to state 100


State 42

    6 stmt: while •

    $default  reduce using rule 6 (stmt)


State 43

  102 for: forprefix • N elist RIGHT_PARENTH N stmt N

    $default  reduce using rule 32 (N)

    N  go to state 101


State 44

    7 stmt: for •

    $default  reduce using rule 7 (stmt)


State 45

    8 stmt: returnstmt •

    $default  reduce using rule 8 (stmt)


State 46

   91 ifprefix: IF LEFT_PARENTH • expr RIGHT_PARENTH

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 102
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 47

  101 forprefix: FOR $@11 • LEFT_PARENTH elist SEMICOLON $@12 M expr SEMICOLON $@13

    LEFT_PARENTH  shift, and go to state 103


State 48

   77 funcdef: FUNCTION ID • @5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH $@7 block

    $default  reduce using rule 74 (@5)

    @5  go to state 104


State 49

   81 funcdef: FUNCTION @8 • LEFT_PARENTH $@9 idlist RIGHT_PARENTH $@10 block

    LEFT_PARENTH  shift, and go to state 105


State 50

  104 returnstmt: RETURN SEMICOLON •

    $default  reduce using rule 104 (returnstmt)


State 51

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
  103 returnstmt: RETURN expr • SEMICOLON

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84
    SEMICOLON  shift, and go to state 106


State 52

   10 stmt: BREAK $@1 • SEMICOLON

    SEMICOLON  shift, and go to state 107


State 53

   12 stmt: CONTINUE $@2 • SEMICOLON

    SEMICOLON  shift, and go to state 108


State 54

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   35 term: NOT expr •

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84

    $default  reduce using rule 35 (term)


State 55

   49 lvalue: LOCAL ID •

    $default  reduce using rule 49 (lvalue)


State 56

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   34 term: MINUS expr •

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 34 (term)


State 57

   57 call: LEFT_PARENTH • funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    FUNCTION  shift, and go to state 4

    funcdef  go to state 109


State 58

   36 term: PLUS_TWO lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET
   56 call: lvalue • callsuffix

    LEFT_SQ_BRACKET  shift, and go to state 88
    LEFT_PARENTH     shift, and go to state 89
    DOT              shift, and go to state 90
    DOT_TWO          shift, and go to state 91

    $default  reduce using rule 36 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 59

   54 member: call • LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET
   55 call: call • LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_SQ_BRACKET  shift, and go to state 96
    LEFT_PARENTH     shift, and go to state 97


State 60

   39 term: MINUS_TWO lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET
   56 call: lvalue • callsuffix

    LEFT_SQ_BRACKET  shift, and go to state 88
    LEFT_PARENTH     shift, and go to state 89
    DOT              shift, and go to state 90
    DOT_TWO          shift, and go to state 91

    $default  reduce using rule 39 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 61

   73 block: LEFT_BRACKET $@4 • stmts RIGHT_BRACKET

    IF               shift, and go to state 1
    WHILE            shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    RETURN           shift, and go to state 5
    BREAK            shift, and go to state 6
    CONTINUE         shift, and go to state 7
    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_BRACKET     shift, and go to state 19
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    SEMICOLON        shift, and go to state 22
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    stmts       go to state 110
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    while       go to state 42
    forprefix   go to state 43
    for         go to state 44
    returnstmt  go to state 45


State 62

   71 indexedelem: LEFT_BRACKET • expr COLON expr RIGHT_BRACKET

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 111
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 63

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   62 elist: expr • exprs

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84
    COMMA      shift, and go to state 112

    $default  reduce using rule 65 (exprs)

    exprs  go to state 113


State 64

   66 objectdef: LEFT_SQ_BRACKET elist • RIGHT_SQ_BRACKET

    RIGHT_SQ_BRACKET  shift, and go to state 114


State 65

   67 objectdef: LEFT_SQ_BRACKET indexed • RIGHT_SQ_BRACKET

    RIGHT_SQ_BRACKET  shift, and go to state 115


State 66

   68 indexed: indexedelem • indexedelems

    COMMA  shift, and go to state 116

    $default  reduce using rule 70 (indexedelems)

    indexedelems  go to state 117


State 67

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   33 term: LEFT_PARENTH expr • RIGHT_PARENTH

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH_F        shift, and go to state 77
    PERCENT        shift, and go to state 78
    EQUAL_TWO      shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    B_EQUAL        shift, and go to state 83
    L_EQUAL        shift, and go to state 84
    RIGHT_PARENTH  shift, and go to state 118


State 68

   46 primary: LEFT_PARENTH funcdef • RIGHT_PARENTH
   57 call: LEFT_PARENTH funcdef • RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 119


State 69

   50 lvalue: NAMESPACE_ ID •

    $default  reduce using rule 50 (lvalue)


State 70

    0 $accept: program $end •

    $default  accept


State 71

    2 stmts: stmt stmts •

    $default  reduce using rule 2 (stmts)


State 72

   29 expr: expr AND • M expr

    $default  reduce using rule 31 (M)

    M  go to state 120


State 73

   28 expr: expr OR • M expr

    $default  reduce using rule 31 (M)

    M  go to state 121


State 74

   17 expr: expr PLUS • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   18 expr: expr MINUS • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   19 expr: expr MULTIPLY • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   20 expr: expr SLASH_F • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   21 expr: expr PERCENT • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   24 expr: expr EQUAL_TWO • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   27 expr: expr NOT_EQUAL • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

   25 expr: expr GREATER • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 82

   22 expr: expr LESS • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   23 expr: expr B_EQUAL • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 84

   26 expr: expr L_EQUAL • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 85

    4 stmt: expr SEMICOLON •

    $default  reduce using rule 4 (stmt)


State 86

   37 term: lvalue PLUS_TWO •

    $default  reduce using rule 37 (term)


State 87

   38 term: lvalue MINUS_TWO •

    $default  reduce using rule 38 (term)


State 88

   53 member: lvalue LEFT_SQ_BRACKET • expr RIGHT_SQ_BRACKET

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 89

   60 normcall: LEFT_PARENTH • elist RIGHT_PARENTH

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 134
    objectdef   go to state 35
    const       go to state 38


State 90

   52 member: lvalue DOT • ID

    ID  shift, and go to state 135


State 91

   61 methodcall: DOT_TWO • ID LEFT_PARENTH elist RIGHT_PARENTH

    ID  shift, and go to state 136


State 92

   42 assignexpr: lvalue $@3 • EQUAL expr

    EQUAL  shift, and go to state 137


State 93

   56 call: lvalue callsuffix •

    $default  reduce using rule 56 (call)


State 94

   58 callsuffix: normcall •

    $default  reduce using rule 58 (callsuffix)


State 95

   59 callsuffix: methodcall •

    $default  reduce using rule 59 (callsuffix)


State 96

   54 member: call LEFT_SQ_BRACKET • expr RIGHT_SQ_BRACKET

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 138
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 97

   55 call: call LEFT_PARENTH • elist RIGHT_PARENTH

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 139
    objectdef   go to state 35
    const       go to state 38


State 98

   93 ifstmt: ifprefix stmt •
   94       | ifprefix stmt • elseprefix stmt

    ELSE  shift, and go to state 140

    ELSE      [reduce using rule 93 (ifstmt)]
    $default  reduce using rule 93 (ifstmt)

    elseprefix  go to state 141


State 99

   96 whilecond: LEFT_PARENTH • expr RIGHT_PARENTH

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 142
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 100

   97 while: whilestart whilecond • stmt

    IF               shift, and go to state 1
    WHILE            shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    RETURN           shift, and go to state 5
    BREAK            shift, and go to state 6
    CONTINUE         shift, and go to state 7
    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_BRACKET     shift, and go to state 19
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    SEMICOLON        shift, and go to state 22
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    stmt        go to state 143
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    while       go to state 42
    forprefix   go to state 43
    for         go to state 44
    returnstmt  go to state 45


State 101

  102 for: forprefix N • elist RIGHT_PARENTH N stmt N

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 144
    objectdef   go to state 35
    const       go to state 38


State 102

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   91 ifprefix: IF LEFT_PARENTH expr • RIGHT_PARENTH

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH_F        shift, and go to state 77
    PERCENT        shift, and go to state 78
    EQUAL_TWO      shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    B_EQUAL        shift, and go to state 83
    L_EQUAL        shift, and go to state 84
    RIGHT_PARENTH  shift, and go to state 145


State 103

  101 forprefix: FOR $@11 LEFT_PARENTH • elist SEMICOLON $@12 M expr SEMICOLON $@13

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 146
    objectdef   go to state 35
    const       go to state 38


State 104

   77 funcdef: FUNCTION ID @5 • LEFT_PARENTH $@6 idlist RIGHT_PARENTH $@7 block

    LEFT_PARENTH  shift, and go to state 147


State 105

   81 funcdef: FUNCTION @8 LEFT_PARENTH • $@9 idlist RIGHT_PARENTH $@10 block

    $default  reduce using rule 79 ($@9)

    $@9  go to state 148


State 106

  103 returnstmt: RETURN expr SEMICOLON •

    $default  reduce using rule 103 (returnstmt)


State 107

   10 stmt: BREAK $@1 SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 108

   12 stmt: CONTINUE $@2 SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 109

   57 call: LEFT_PARENTH funcdef • RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 149


State 110

   73 block: LEFT_BRACKET $@4 stmts • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 150


State 111

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   71 indexedelem: LEFT_BRACKET expr • COLON expr RIGHT_BRACKET

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84
    COLON      shift, and go to state 151


State 112

   64 exprs: COMMA • expr exprs

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 152
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 113

   62 elist: expr exprs •

    $default  reduce using rule 62 (elist)


State 114

   66 objectdef: LEFT_SQ_BRACKET elist RIGHT_SQ_BRACKET •

    $default  reduce using rule 66 (objectdef)


State 115

   67 objectdef: LEFT_SQ_BRACKET indexed RIGHT_SQ_BRACKET •

    $default  reduce using rule 67 (objectdef)


State 116

   69 indexedelems: COMMA • indexedelem indexedelems

    LEFT_BRACKET  shift, and go to state 62

    indexedelem  go to state 153


State 117

   68 indexed: indexedelem indexedelems •

    $default  reduce using rule 68 (indexed)


State 118

   33 term: LEFT_PARENTH expr RIGHT_PARENTH •

    $default  reduce using rule 33 (term)


State 119

   46 primary: LEFT_PARENTH funcdef RIGHT_PARENTH •
   57 call: LEFT_PARENTH funcdef RIGHT_PARENTH • LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 154

    $default  reduce using rule 46 (primary)


State 120

   29 expr: expr AND M • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 155
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 121

   28 expr: expr OR M • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 156
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 122

   17 expr: expr • PLUS expr
   17     | expr PLUS expr •
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 17 (expr)


State 123

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   18     | expr MINUS expr •
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 18 (expr)


State 124

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   19     | expr MULTIPLY expr •
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    $default  reduce using rule 19 (expr)


State 125

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   20     | expr SLASH_F expr •
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    $default  reduce using rule 20 (expr)


State 126

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   21     | expr PERCENT expr •
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    $default  reduce using rule 21 (expr)


State 127

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   24     | expr EQUAL_TWO expr •
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78
    GREATER   shift, and go to state 81
    LESS      shift, and go to state 82
    B_EQUAL   shift, and go to state 83
    L_EQUAL   shift, and go to state 84

    EQUAL_TWO  error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 128

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   27     | expr NOT_EQUAL expr •
   28     | expr • OR M expr
   29     | expr • AND M expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78
    GREATER   shift, and go to state 81
    LESS      shift, and go to state 82
    B_EQUAL   shift, and go to state 83
    L_EQUAL   shift, and go to state 84

    EQUAL_TWO  error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 129

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   25     | expr GREATER expr •
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 25 (expr)


State 130

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   22     | expr LESS expr •
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 22 (expr)


State 131

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   23     | expr B_EQUAL expr •
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 23 (expr)


State 132

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   26     | expr L_EQUAL expr •
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    SLASH_F   shift, and go to state 77
    PERCENT   shift, and go to state 78

    $default  reduce using rule 26 (expr)


State 133

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   53 member: lvalue LEFT_SQ_BRACKET expr • RIGHT_SQ_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    PLUS              shift, and go to state 74
    MINUS             shift, and go to state 75
    MULTIPLY          shift, and go to state 76
    SLASH_F           shift, and go to state 77
    PERCENT           shift, and go to state 78
    EQUAL_TWO         shift, and go to state 79
    NOT_EQUAL         shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82
    B_EQUAL           shift, and go to state 83
    L_EQUAL           shift, and go to state 84
    RIGHT_SQ_BRACKET  shift, and go to state 157


State 134

   60 normcall: LEFT_PARENTH elist • RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 158


State 135

   52 member: lvalue DOT ID •

    $default  reduce using rule 52 (member)


State 136

   61 methodcall: DOT_TWO ID • LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 159


State 137

   42 assignexpr: lvalue $@3 EQUAL • expr

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 160
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 138

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   54 member: call LEFT_SQ_BRACKET expr • RIGHT_SQ_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    PLUS              shift, and go to state 74
    MINUS             shift, and go to state 75
    MULTIPLY          shift, and go to state 76
    SLASH_F           shift, and go to state 77
    PERCENT           shift, and go to state 78
    EQUAL_TWO         shift, and go to state 79
    NOT_EQUAL         shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82
    B_EQUAL           shift, and go to state 83
    L_EQUAL           shift, and go to state 84
    RIGHT_SQ_BRACKET  shift, and go to state 161


State 139

   55 call: call LEFT_PARENTH elist • RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 162


State 140

   92 elseprefix: ELSE •

    $default  reduce using rule 92 (elseprefix)


State 141

   94 ifstmt: ifprefix stmt elseprefix • stmt

    IF               shift, and go to state 1
    WHILE            shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    RETURN           shift, and go to state 5
    BREAK            shift, and go to state 6
    CONTINUE         shift, and go to state 7
    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_BRACKET     shift, and go to state 19
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    SEMICOLON        shift, and go to state 22
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    stmt        go to state 163
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    while       go to state 42
    forprefix   go to state 43
    for         go to state 44
    returnstmt  go to state 45


State 142

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   96 whilecond: LEFT_PARENTH expr • RIGHT_PARENTH

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH_F        shift, and go to state 77
    PERCENT        shift, and go to state 78
    EQUAL_TWO      shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    B_EQUAL        shift, and go to state 83
    L_EQUAL        shift, and go to state 84
    RIGHT_PARENTH  shift, and go to state 164


State 143

   97 while: whilestart whilecond stmt •

    $default  reduce using rule 97 (while)


State 144

  102 for: forprefix N elist • RIGHT_PARENTH N stmt N

    RIGHT_PARENTH  shift, and go to state 165


State 145

   91 ifprefix: IF LEFT_PARENTH expr RIGHT_PARENTH •

    $default  reduce using rule 91 (ifprefix)


State 146

  101 forprefix: FOR $@11 LEFT_PARENTH elist • SEMICOLON $@12 M expr SEMICOLON $@13

    SEMICOLON  shift, and go to state 166


State 147

   77 funcdef: FUNCTION ID @5 LEFT_PARENTH • $@6 idlist RIGHT_PARENTH $@7 block

    $default  reduce using rule 75 ($@6)

    $@6  go to state 167


State 148

   81 funcdef: FUNCTION @8 LEFT_PARENTH $@9 • idlist RIGHT_PARENTH $@10 block

    ID  shift, and go to state 168

    $default  reduce using rule 90 (idlist)

    idlist  go to state 169


State 149

   57 call: LEFT_PARENTH funcdef RIGHT_PARENTH • LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 154


State 150

   73 block: LEFT_BRACKET $@4 stmts RIGHT_BRACKET •

    $default  reduce using rule 73 (block)


State 151

   71 indexedelem: LEFT_BRACKET expr COLON • expr RIGHT_BRACKET

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 170
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 152

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   64 exprs: COMMA expr • exprs

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84
    COMMA      shift, and go to state 112

    $default  reduce using rule 65 (exprs)

    exprs  go to state 171


State 153

   69 indexedelems: COMMA indexedelem • indexedelems

    COMMA  shift, and go to state 116

    $default  reduce using rule 70 (indexedelems)

    indexedelems  go to state 172


State 154

   57 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH • elist RIGHT_PARENTH

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 173
    objectdef   go to state 35
    const       go to state 38


State 155

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   29     | expr AND M expr •

    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84

    $default  reduce using rule 29 (expr)


State 156

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   28     | expr OR M expr •
   29     | expr • AND M expr

    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84

    $default  reduce using rule 28 (expr)


State 157

   53 member: lvalue LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET •

    $default  reduce using rule 53 (member)


State 158

   60 normcall: LEFT_PARENTH elist RIGHT_PARENTH •

    $default  reduce using rule 60 (normcall)


State 159

   61 methodcall: DOT_TWO ID LEFT_PARENTH • elist RIGHT_PARENTH

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 174
    objectdef   go to state 35
    const       go to state 38


State 160

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   42 assignexpr: lvalue $@3 EQUAL expr •

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84

    $default  reduce using rule 42 (assignexpr)


State 161

   54 member: call LEFT_SQ_BRACKET expr RIGHT_SQ_BRACKET •

    $default  reduce using rule 54 (member)


State 162

   55 call: call LEFT_PARENTH elist RIGHT_PARENTH •

    $default  reduce using rule 55 (call)


State 163

   94 ifstmt: ifprefix stmt elseprefix stmt •

    $default  reduce using rule 94 (ifstmt)


State 164

   96 whilecond: LEFT_PARENTH expr RIGHT_PARENTH •

    $default  reduce using rule 96 (whilecond)


State 165

  102 for: forprefix N elist RIGHT_PARENTH • N stmt N

    $default  reduce using rule 32 (N)

    N  go to state 175


State 166

  101 forprefix: FOR $@11 LEFT_PARENTH elist SEMICOLON • $@12 M expr SEMICOLON $@13

    $default  reduce using rule 99 ($@12)

    $@12  go to state 176


State 167

   77 funcdef: FUNCTION ID @5 LEFT_PARENTH $@6 • idlist RIGHT_PARENTH $@7 block

    ID  shift, and go to state 168

    $default  reduce using rule 90 (idlist)

    idlist  go to state 177


State 168

   88 idlist: ID •

    $default  reduce using rule 88 (idlist)


State 169

   81 funcdef: FUNCTION @8 LEFT_PARENTH $@9 idlist • RIGHT_PARENTH $@10 block
   89 idlist: idlist • COMMA ID

    RIGHT_PARENTH  shift, and go to state 178
    COMMA          shift, and go to state 179


State 170

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
   71 indexedelem: LEFT_BRACKET expr COLON expr • RIGHT_BRACKET

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTIPLY       shift, and go to state 76
    SLASH_F        shift, and go to state 77
    PERCENT        shift, and go to state 78
    EQUAL_TWO      shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    B_EQUAL        shift, and go to state 83
    L_EQUAL        shift, and go to state 84
    RIGHT_BRACKET  shift, and go to state 180


State 171

   64 exprs: COMMA expr exprs •

    $default  reduce using rule 64 (exprs)


State 172

   69 indexedelems: COMMA indexedelem indexedelems •

    $default  reduce using rule 69 (indexedelems)


State 173

   57 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist • RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 181


State 174

   61 methodcall: DOT_TWO ID LEFT_PARENTH elist • RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 182


State 175

  102 for: forprefix N elist RIGHT_PARENTH N • stmt N

    IF               shift, and go to state 1
    WHILE            shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    RETURN           shift, and go to state 5
    BREAK            shift, and go to state 6
    CONTINUE         shift, and go to state 7
    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_BRACKET     shift, and go to state 19
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    SEMICOLON        shift, and go to state 22
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    stmt        go to state 183
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    while       go to state 42
    forprefix   go to state 43
    for         go to state 44
    returnstmt  go to state 45


State 176

  101 forprefix: FOR $@11 LEFT_PARENTH elist SEMICOLON $@12 • M expr SEMICOLON $@13

    $default  reduce using rule 31 (M)

    M  go to state 184


State 177

   77 funcdef: FUNCTION ID @5 LEFT_PARENTH $@6 idlist • RIGHT_PARENTH $@7 block
   89 idlist: idlist • COMMA ID

    RIGHT_PARENTH  shift, and go to state 185
    COMMA          shift, and go to state 179


State 178

   81 funcdef: FUNCTION @8 LEFT_PARENTH $@9 idlist RIGHT_PARENTH • $@10 block

    $default  reduce using rule 80 ($@10)

    $@10  go to state 186


State 179

   89 idlist: idlist COMMA • ID

    ID  shift, and go to state 187


State 180

   71 indexedelem: LEFT_BRACKET expr COLON expr RIGHT_BRACKET •

    $default  reduce using rule 71 (indexedelem)


State 181

   57 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH •

    $default  reduce using rule 57 (call)


State 182

   61 methodcall: DOT_TWO ID LEFT_PARENTH elist RIGHT_PARENTH •

    $default  reduce using rule 61 (methodcall)


State 183

  102 for: forprefix N elist RIGHT_PARENTH N stmt • N

    $default  reduce using rule 32 (N)

    N  go to state 188


State 184

  101 forprefix: FOR $@11 LEFT_PARENTH elist SEMICOLON $@12 M • expr SEMICOLON $@13

    NOT              shift, and go to state 8
    LOCAL            shift, and go to state 9
    TRUE             shift, and go to state 10
    FALSE            shift, and go to state 11
    NIL              shift, and go to state 12
    MINUS            shift, and go to state 13
    PLUS_TWO         shift, and go to state 14
    MINUS_TWO        shift, and go to state 15
    NUM              shift, and go to state 16
    FLOAT            shift, and go to state 17
    STRING           shift, and go to state 18
    LEFT_SQ_BRACKET  shift, and go to state 20
    LEFT_PARENTH     shift, and go to state 21
    NAMESPACE_       shift, and go to state 23
    ID               shift, and go to state 24

    expr        go to state 189
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 185

   77 funcdef: FUNCTION ID @5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH • $@7 block

    $default  reduce using rule 76 ($@7)

    $@7  go to state 190


State 186

   81 funcdef: FUNCTION @8 LEFT_PARENTH $@9 idlist RIGHT_PARENTH $@10 • block

    LEFT_BRACKET  shift, and go to state 19

    block  go to state 191


State 187

   89 idlist: idlist COMMA ID •

    $default  reduce using rule 89 (idlist)


State 188

  102 for: forprefix N elist RIGHT_PARENTH N stmt N •

    $default  reduce using rule 102 (for)


State 189

   17 expr: expr • PLUS expr
   18     | expr • MINUS expr
   19     | expr • MULTIPLY expr
   20     | expr • SLASH_F expr
   21     | expr • PERCENT expr
   22     | expr • LESS expr
   23     | expr • B_EQUAL expr
   24     | expr • EQUAL_TWO expr
   25     | expr • GREATER expr
   26     | expr • L_EQUAL expr
   27     | expr • NOT_EQUAL expr
   28     | expr • OR M expr
   29     | expr • AND M expr
  101 forprefix: FOR $@11 LEFT_PARENTH elist SEMICOLON $@12 M expr • SEMICOLON $@13

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75
    MULTIPLY   shift, and go to state 76
    SLASH_F    shift, and go to state 77
    PERCENT    shift, and go to state 78
    EQUAL_TWO  shift, and go to state 79
    NOT_EQUAL  shift, and go to state 80
    GREATER    shift, and go to state 81
    LESS       shift, and go to state 82
    B_EQUAL    shift, and go to state 83
    L_EQUAL    shift, and go to state 84
    SEMICOLON  shift, and go to state 192


State 190

   77 funcdef: FUNCTION ID @5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH $@7 • block

    LEFT_BRACKET  shift, and go to state 19

    block  go to state 193


State 191

   81 funcdef: FUNCTION @8 LEFT_PARENTH $@9 idlist RIGHT_PARENTH $@10 block •

    $default  reduce using rule 81 (funcdef)


State 192

  101 forprefix: FOR $@11 LEFT_PARENTH elist SEMICOLON $@12 M expr SEMICOLON • $@13

    $default  reduce using rule 100 ($@13)

    $@13  go to state 194


State 193

   77 funcdef: FUNCTION ID @5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH $@7 block •

    $default  reduce using rule 77 (funcdef)


State 194

  101 forprefix: FOR $@11 LEFT_PARENTH elist SEMICOLON $@12 M expr SEMICOLON $@13 •

    $default  reduce using rule 101 (forprefix)
